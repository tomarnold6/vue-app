---
name: Run checks on PRs
on:
  pull_request:
  push:
    branches:
      - main
      - develop
      - release
permissions:
  contents: read
jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install project dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
  buildTestScan:
    name: Build, test, and run SonarCloud scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Sonar Scanner requires full history for blame information
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.10.0
          cache: npm
      - name: Install project dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
      - name: Test the project
        run: npm run test:unit
      - name: Preserve build artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/
          name: vue-test
      - name: Preserve test coverage report
        uses: actions/upload-artifact@v3
        with:
          path: coverage/lcov-report/
          name: lcov-report
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"
  release:
    needs: buildTestScan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Artifact
        uses: actions/download-artifact@v3
        id: download
        with:
          name: vue-test
      - name: Extract container location
        shell: bash
        run: |
          pwd
        id: extract_location
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Create Release
        shell: bash
        run: |
          for f in ${{steps.extract_location.outputs.folder}}; do FILES+=" -a $f"; done
          hub release create ${{steps.extract_branch.outputs.branch}} -m ${{steps.extract_branch.outputs.branch}} $FILES
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
